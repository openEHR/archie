plugins {
  id("io.github.gradle-nexus.publish-plugin") version "2.0.0"
}

repositories {
  mavenCentral()
}


wrapper {
    gradleVersion = '5.6.4'
}

allprojects {
  version = '3.15.0'
  group = 'com.nedap.healthcare.archie'
  ext.gradleScriptDir = "${rootProject.projectDir}/gradle"
  //archivesBaseName = 'archie'

  tasks.withType(Javadoc) {
    options.addStringOption('Xdoclint:all', '-quiet')
  }
}

gradle.ext.ossrhUsernameSafe = hasProperty('ossrhUsername') ? ossrhUsername : ""
gradle.ext.ossrhPasswordSafe = hasProperty('ossrhPassword') ? ossrhPassword : ""
gradle.ext.shouldSign = hasProperty('signing.keyId')
gradle.ext.isParallel = hasProperty('org.gradle.parallel') ? project.property('org.gradle.parallel') == 'true' : false

apply from: "${gradleScriptDir}/publish-maven.gradle"



subprojects {
  apply plugin: 'java-library'

 // plugins {
   //   id 'com.github.ben-manes.versions' version '0.13.0'
 // }

  sourceCompatibility = '1.8'
  targetCompatibility = '1.8'

  compileJava.options.encoding = "UTF-8"
  compileTestJava.options.encoding = "UTF-8"

  repositories {
      mavenCentral()
      maven { url 'https://jitpack.io' }
  }

  ext.reflectionsVersion = '0.10.2'
  ext.jacksonVersion = '2.20.0'


  java {
    withJavadocJar()
    withSourcesJar()
  }


  dependencies {
    api 'org.slf4j:slf4j-api:1.7.36'

    api "com.fasterxml.jackson.core:jackson-annotations:${jacksonVersion}"
    api "com.fasterxml.jackson.core:jackson-databind:${jacksonVersion}"
    api "com.fasterxml.jackson.datatype:jackson-datatype-jsr310:${jacksonVersion}"

    implementation 'com.google.guava:guava:33.4.8-jre'

    implementation "org.reflections:reflections:${reflectionsVersion}"
    implementation 'com.esotericsoftware.kryo:kryo5:5.6.2'

    implementation('commons-io:commons-io:2.20.0'){
      exclude group: 'commons-logging', module: 'commons-logging'
    }
    implementation 'org.apache.commons:commons-text:1.14.0'
    implementation 'org.apache.commons:commons-lang3:3.18.0'

    //java 10 no longer has these included by default, so explicit dependency is needed.
    api 'javax.xml.bind:jaxb-api:2.3.1'
    api 'com.sun.xml.bind:jaxb-core:2.3.0.1'
    runtimeOnly 'com.sun.xml.bind:jaxb-impl:2.3.9'
    api 'javax.activation:activation:1.1.1'

    api 'org.threeten:threeten-extra:1.8.0'

    testImplementation 'junit:junit:4.+'
    testImplementation 'org.slf4j:slf4j-simple:1.7.36'

    api 'com.github.zafarkhaja:java-semver:0.10.2'


  }


  javadoc {
      options.encoding = 'UTF-8'
  }



  test {
    if(JavaVersion.current() != JavaVersion.VERSION_1_8) {
      jvmArgs = ['--add-opens', 'java.base/java.lang=ALL-UNNAMED'
                 , '--add-opens', 'java.base/java.lang.invoke=ALL-UNNAMED'
                 , '--add-opens', 'java.base/java.net=ALL-UNNAMED'
                 , '--add-opens', 'java.base/java.nio=ALL-UNNAMED'
                 , '--add-opens', 'java.base/java.time=ALL-UNNAMED'
                 , '--add-opens', 'java.base/java.util=ALL-UNNAMED'
                 , '--add-opens', 'java.base/java.util.concurrent.atomic=ALL-UNNAMED'
                 , '--add-opens', 'java.base/sun.nio.ch=ALL-UNNAMED'
                 , '--add-opens', 'java.base/sun.util.calendar=ALL-UNNAMED']
    }
   testLogging {
      events "failed"
      exceptionFormat "full"
    }
  }

}

apply from: "${gradleScriptDir}/jacoco.gradle"
